{"ast":null,"code":"import React,{createContext,useContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const AuthProvider=_ref=>{let{children}=_ref;const[isAuthenticated,setIsAuthenticated]=useState(false);const[user,setUser]=useState(null);const[loading,setLoading]=useState(false);const login=async credentials=>{setLoading(true);try{if(credentials.username==='admin'&&credentials.password==='admin'){setUser({username:'admin',role:'ADMIN'});setIsAuthenticated(true);}else{throw new Error('Invalid credentials');}}finally{setLoading(false);}};const logout=()=>{setIsAuthenticated(false);setUser(null);};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{isAuthenticated,user,loading,login,logout},children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","AuthContext","undefined","AuthProvider","_ref","children","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","login","credentials","username","password","role","Error","logout","Provider","value","useAuth","context"],"sources":["C:/Users/jesli/OneDrive/Desktop/BITS- 2nd Sem/FSAD/Assignment/vaccination-tracker/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode } from 'react';\r\n\r\ninterface User {\r\n    role: 'ADMIN' | 'COORDINATOR';\r\n    username: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n    isAuthenticated: boolean;\r\n    user: User | null;\r\n    loading: boolean;\r\n    login: (credentials: { username: string; password: string }) => Promise<void>;\r\n    logout: () => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    const [user, setUser] = useState<User | null>(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const login = async (credentials: { username: string; password: string }) => {\r\n        setLoading(true);\r\n        try {\r\n            if (credentials.username === 'admin' && credentials.password === 'admin') {\r\n                setUser({ username: 'admin', role: 'ADMIN' });\r\n                setIsAuthenticated(true);\r\n            } else {\r\n                throw new Error('Invalid credentials');\r\n            }\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        setIsAuthenticated(false);\r\n        setUser(null);\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ isAuthenticated, user, loading, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (context === undefined) {\r\n        throw new Error('useAuth must be used within an AuthProvider');\r\n    }\r\n    return context;\r\n}; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAmB,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAe9E,KAAM,CAAAC,WAAW,cAAGL,aAAa,CAA8BM,SAAS,CAAC,CAEzE,MAAO,MAAM,CAAAC,YAA+C,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACxE,KAAM,CAACE,eAAe,CAAEC,kBAAkB,CAAC,CAAGT,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAACU,IAAI,CAAEC,OAAO,CAAC,CAAGX,QAAQ,CAAc,IAAI,CAAC,CACnD,KAAM,CAACY,OAAO,CAAEC,UAAU,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CAE7C,KAAM,CAAAc,KAAK,CAAG,KAAO,CAAAC,WAAmD,EAAK,CACzEF,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,CACA,GAAIE,WAAW,CAACC,QAAQ,GAAK,OAAO,EAAID,WAAW,CAACE,QAAQ,GAAK,OAAO,CAAE,CACtEN,OAAO,CAAC,CAAEK,QAAQ,CAAE,OAAO,CAAEE,IAAI,CAAE,OAAQ,CAAC,CAAC,CAC7CT,kBAAkB,CAAC,IAAI,CAAC,CAC5B,CAAC,IAAM,CACH,KAAM,IAAI,CAAAU,KAAK,CAAC,qBAAqB,CAAC,CAC1C,CACJ,CAAC,OAAS,CACNN,UAAU,CAAC,KAAK,CAAC,CACrB,CACJ,CAAC,CAED,KAAM,CAAAO,MAAM,CAAGA,CAAA,GAAM,CACjBX,kBAAkB,CAAC,KAAK,CAAC,CACzBE,OAAO,CAAC,IAAI,CAAC,CACjB,CAAC,CAED,mBACIT,IAAA,CAACC,WAAW,CAACkB,QAAQ,EAACC,KAAK,CAAE,CAAEd,eAAe,CAAEE,IAAI,CAAEE,OAAO,CAAEE,KAAK,CAAEM,MAAO,CAAE,CAAAb,QAAA,CAC1EA,QAAQ,CACS,CAAC,CAE/B,CAAC,CAED,MAAO,MAAM,CAAAgB,OAAO,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAAC,OAAO,CAAGzB,UAAU,CAACI,WAAW,CAAC,CACvC,GAAIqB,OAAO,GAAKpB,SAAS,CAAE,CACvB,KAAM,IAAI,CAAAe,KAAK,CAAC,6CAA6C,CAAC,CAClE,CACA,MAAO,CAAAK,OAAO,CAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}