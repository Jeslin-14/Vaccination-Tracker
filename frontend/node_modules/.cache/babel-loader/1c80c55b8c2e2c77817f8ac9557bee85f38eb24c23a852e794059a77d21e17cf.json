{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jesli\\\\OneDrive\\\\Desktop\\\\BITS- 2nd Sem\\\\FSAD\\\\Assignment\\\\vaccination-tracker\\\\frontend\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const login = async credentials => {\n    setLoading(true);\n    try {\n      if (credentials.username === 'admin' && credentials.password === 'admin') {\n        setUser({\n          username: 'admin',\n          role: 'ADMIN'\n        });\n        setIsAuthenticated(true);\n      } else {\n        throw new Error('Invalid credentials');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    setIsAuthenticated(false);\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      loading,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"wQ+k3VnaoVybzrwsyV2RsCeo4TU=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","login","credentials","username","password","role","Error","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/jesli/OneDrive/Desktop/BITS- 2nd Sem/FSAD/Assignment/vaccination-tracker/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode } from 'react';\r\n\r\ninterface User {\r\n    role: 'ADMIN' | 'COORDINATOR';\r\n    username: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n    isAuthenticated: boolean;\r\n    user: User | null;\r\n    loading: boolean;\r\n    login: (credentials: { username: string; password: string }) => Promise<void>;\r\n    logout: () => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    const [user, setUser] = useState<User | null>(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const login = async (credentials: { username: string; password: string }) => {\r\n        setLoading(true);\r\n        try {\r\n            if (credentials.username === 'admin' && credentials.password === 'admin') {\r\n                setUser({ username: 'admin', role: 'ADMIN' });\r\n                setIsAuthenticated(true);\r\n            } else {\r\n                throw new Error('Invalid credentials');\r\n            }\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        setIsAuthenticated(false);\r\n        setUser(null);\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ isAuthenticated, user, loading, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (context === undefined) {\r\n        throw new Error('useAuth must be used within an AuthProvider');\r\n    }\r\n    return context;\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAe9E,MAAMC,WAAW,gBAAGL,aAAa,CAA8BM,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAA+C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7E,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMc,KAAK,GAAG,MAAOC,WAAmD,IAAK;IACzEF,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACA,IAAIE,WAAW,CAACC,QAAQ,KAAK,OAAO,IAAID,WAAW,CAACE,QAAQ,KAAK,OAAO,EAAE;QACtEN,OAAO,CAAC;UAAEK,QAAQ,EAAE,OAAO;UAAEE,IAAI,EAAE;QAAQ,CAAC,CAAC;QAC7CT,kBAAkB,CAAC,IAAI,CAAC;MAC5B,CAAC,MAAM;QACH,MAAM,IAAIU,KAAK,CAAC,qBAAqB,CAAC;MAC1C;IACJ,CAAC,SAAS;MACNN,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,MAAMO,MAAM,GAAGA,CAAA,KAAM;IACjBX,kBAAkB,CAAC,KAAK,CAAC;IACzBE,OAAO,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,oBACIT,OAAA,CAACC,WAAW,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEd,eAAe;MAAEE,IAAI;MAAEE,OAAO;MAAEE,KAAK;MAAEM;IAAO,CAAE;IAAAd,QAAA,EAC1EA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACnB,EAAA,CA7BWF,YAA+C;AAAAsB,EAAA,GAA/CtB,YAA+C;AA+B5D,OAAO,MAAMuB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,MAAMC,OAAO,GAAG/B,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI2B,OAAO,KAAK1B,SAAS,EAAE;IACvB,MAAM,IAAIe,KAAK,CAAC,6CAA6C,CAAC;EAClE;EACA,OAAOW,OAAO;AAClB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}