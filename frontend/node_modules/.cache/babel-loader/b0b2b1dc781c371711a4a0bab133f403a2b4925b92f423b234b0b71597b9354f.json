{"ast":null,"code":"import React,{useState,useEffect}from'react';import{TextField,Button,Select,MenuItem,FormControl,InputLabel,Dialog,DialogTitle,DialogContent,DialogActions}from'@mui/material';import{getVaccines,getVaccinationDrives}from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const VaccinationRecordForm=_ref=>{let{open,onClose,onSubmit,initialData,studentId}=_ref;const[formData,setFormData]=useState({studentId,vaccineId:0,driveId:0,dateAdministered:new Date().toISOString().split('T')[0],batchNumber:''});const[vaccines,setVaccines]=useState([]);const[drives,setDrives]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);useEffect(()=>{if(open){loadFormData();if(initialData){setFormData({studentId,vaccineId:initialData.vaccine.vaccineId,driveId:initialData.vaccinationDrive.driveId,dateAdministered:new Date(initialData.dateAdministered).toISOString().split('T')[0],batchNumber:initialData.batchNumber});}}},[open,initialData,studentId]);const loadFormData=async()=>{try{setLoading(true);const[vaccinesData,drivesData]=await Promise.all([getVaccines(),getVaccinationDrives()]);setVaccines(vaccinesData);setDrives(drivesData);setError(null);}catch(err){setError('Failed to load form data');console.error(err);}finally{setLoading(false);}};const handleChange=field=>event=>{const value=event.target.value;setFormData(prev=>({...prev,[field]:field==='vaccineId'||field==='driveId'?Number(value):value}));};const handleSubmit=async e=>{e.preventDefault();try{await onSubmit(formData);onClose();}catch(err){setError('Failed to save vaccination record');console.error(err);}};return/*#__PURE__*/_jsx(Dialog,{open:open,onClose:onClose,maxWidth:\"sm\",fullWidth:true,children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(DialogTitle,{children:initialData?'Edit Vaccination Record':'Add Vaccination Record'}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,margin:\"normal\",children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Vaccine\"}),/*#__PURE__*/_jsx(Select,{value:formData.vaccineId,onChange:handleChange('vaccineId'),required:true,children:vaccines.map(vaccine=>/*#__PURE__*/_jsx(MenuItem,{value:vaccine.vaccineId,children:vaccine.name},vaccine.vaccineId))})]}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,margin:\"normal\",children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Vaccination Drive\"}),/*#__PURE__*/_jsx(Select,{labelId:\"drive-select-label\",id:\"drive-select\",value:formData.driveId,onChange:handleChange('driveId'),required:true,children:drives.map(drive=>/*#__PURE__*/_jsx(MenuItem,{value:drive._id,children:drive.vaccineName},drive._id))})]}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,margin:\"normal\",type:\"date\",label:\"Date Administered\",value:formData.dateAdministered,onChange:handleChange('dateAdministered'),required:true,InputLabelProps:{shrink:true}}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,margin:\"normal\",label:\"Batch Number\",value:formData.batchNumber,onChange:handleChange('batchNumber'),required:true})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:onClose,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",disabled:loading,children:initialData?'Update':'Add'})]})]})});};","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Select","MenuItem","FormControl","InputLabel","Dialog","DialogTitle","DialogContent","DialogActions","getVaccines","getVaccinationDrives","jsx","_jsx","jsxs","_jsxs","VaccinationRecordForm","_ref","open","onClose","onSubmit","initialData","studentId","formData","setFormData","vaccineId","driveId","dateAdministered","Date","toISOString","split","batchNumber","vaccines","setVaccines","drives","setDrives","loading","setLoading","error","setError","loadFormData","vaccine","vaccinationDrive","vaccinesData","drivesData","Promise","all","err","console","handleChange","field","event","value","target","prev","Number","handleSubmit","e","preventDefault","maxWidth","fullWidth","children","margin","onChange","required","map","name","labelId","id","drive","_id","vaccineName","type","label","InputLabelProps","shrink","onClick","variant","color","disabled"],"sources":["C:/Users/jesli/OneDrive/Desktop/BITS- 2nd Sem/FSAD/Assignment/vaccination-tracker/frontend/src/components/VaccinationRecordForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Box,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  SelectChangeEvent,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from '@mui/material';\r\nimport { VaccinationRecord, VaccinationRecordFormData } from '../types';\r\nimport { Vaccine } from '../types';\r\nimport { VaccinationDrive } from '../types';\r\nimport { getVaccines, getVaccinationDrives } from '../services/api';\r\n\r\ninterface VaccinationRecordFormProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  onSubmit: (data: VaccinationRecordFormData) => Promise<void>;\r\n  initialData?: VaccinationRecord;\r\n  studentId: string;\r\n}\r\n\r\nexport const VaccinationRecordForm: React.FC<VaccinationRecordFormProps> = ({\r\n  open,\r\n  onClose,\r\n  onSubmit,\r\n  initialData,\r\n  studentId,\r\n}) => {\r\n  const [formData, setFormData] = useState<VaccinationRecordFormData>({\r\n    studentId,\r\n    vaccineId: 0,\r\n    driveId: 0,\r\n    dateAdministered: new Date().toISOString().split('T')[0],\r\n    batchNumber: '',\r\n  });\r\n  const [vaccines, setVaccines] = useState<Vaccine[]>([]);\r\n  const [drives, setDrives] = useState<VaccinationDrive[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      loadFormData();\r\n      if (initialData) {\r\n        setFormData({\r\n          studentId,\r\n          vaccineId: initialData.vaccine.vaccineId,\r\n          driveId: initialData.vaccinationDrive.driveId,\r\n          dateAdministered: new Date(initialData.dateAdministered).toISOString().split('T')[0],\r\n          batchNumber: initialData.batchNumber,\r\n        });\r\n      }\r\n    }\r\n  }, [open, initialData, studentId]);\r\n\r\n  const loadFormData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const [vaccinesData, drivesData] = await Promise.all([\r\n        getVaccines(),\r\n        getVaccinationDrives(),\r\n      ]);\r\n      setVaccines(vaccinesData);\r\n      setDrives(drivesData);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError('Failed to load form data');\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (field: keyof VaccinationRecordFormData) => (\r\n    event: SelectChangeEvent<string | number> | React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    const value = event.target.value;\r\n    setFormData((prev: VaccinationRecordFormData) => ({\r\n      ...prev,\r\n      [field]: field === 'vaccineId' || field === 'driveId' ? Number(value) : value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      await onSubmit(formData);\r\n      onClose();\r\n    } catch (err) {\r\n      setError('Failed to save vaccination record');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\r\n      <form onSubmit={handleSubmit}>\r\n        <DialogTitle>\r\n          {initialData ? 'Edit Vaccination Record' : 'Add Vaccination Record'}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <FormControl fullWidth margin=\"normal\">\r\n            <InputLabel>Vaccine</InputLabel>\r\n            <Select<number>\r\n              value={formData.vaccineId}\r\n              onChange={handleChange('vaccineId') as (event: SelectChangeEvent<number>) => void}\r\n              required\r\n            >\r\n              {vaccines.map((vaccine) => (\r\n                <MenuItem key={vaccine.vaccineId} value={vaccine.vaccineId}>\r\n                  {vaccine.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl fullWidth margin=\"normal\">\r\n            <InputLabel>Vaccination Drive</InputLabel>\r\n            <Select\r\n              labelId=\"drive-select-label\"\r\n              id=\"drive-select\"\r\n              value={formData.driveId}\r\n              onChange={handleChange('driveId') as (event: SelectChangeEvent<number>) => void}\r\n              required\r\n            >\r\n              {drives.map((drive) => (\r\n                <MenuItem key={drive._id} value={drive._id}>\r\n                  {drive.vaccineName}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <TextField\r\n            fullWidth\r\n            margin=\"normal\"\r\n            type=\"date\"\r\n            label=\"Date Administered\"\r\n            value={formData.dateAdministered}\r\n            onChange={handleChange('dateAdministered')}\r\n            required\r\n            InputLabelProps={{ shrink: true }}\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            margin=\"normal\"\r\n            label=\"Batch Number\"\r\n            value={formData.batchNumber}\r\n            onChange={handleChange('batchNumber')}\r\n            required\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onClose}>Cancel</Button>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}>\r\n            {initialData ? 'Update' : 'Add'}\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}